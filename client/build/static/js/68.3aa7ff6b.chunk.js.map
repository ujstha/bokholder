{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/ion-segment_2-ios.entry.js","../node_modules/@ionic/core/dist/esm-es5/theme-18cbe2cc.js"],"names":["Segment","class_1","hostRef","_this","this","registerInstance","didInit","activated","disabled","scrollable","onClick","ev","current","target","previous","checked","value","checkButton","ionChange","createEvent","ionStyle","prototype","valueChanged","emit","disabledChanged","gestureChanged","_i","buttons_1","getButtons","length","gesture","enable","connectedCallback","emitStyle","componentWillLoad","componentDidLoad","__awaiter","_a","__generator","_b","label","setCheckedClasses","sent","createGesture","el","gestureName","gesturePriority","threshold","passive","onStart","onMove","onEnd","detail","activate","setNextIndex","setActivated","checkedValidButton","event","preventDefault","stopImmediatePropagation","addRipple","Array","from","querySelectorAll","ripple","find","button","shadowRoot","querySelector","pointerCoord","x","y","then","remove","forEach","classList","add","clicked","tagName","getIndicator","previousIndicator","currentIndicator","previousClientRect","getBoundingClientRect","currentClientRect","widthDelta","width","transform","left","writeTask","style","setProperty","buttons","next","findIndex","buttons_2","isEnd","nextIndex","isRTL","document","dir","index","rect","currentX","previousY","nextEl","elementFromPoint","newIndex","undefined","render","mode","getIonMode","h","Host","class","Object","assign","createColorClasses","color","hostContext","defineProperty","get","getElement","enumerable","configurable","ids","SegmentButton","segmentEl","layout","type","updateState","closest","addEventListener","disconnectedCallback","removeEventListener","hasIcon","hasLabel","part","selector","getClassMap","classes","map","isArray","split","filter","c","trim","getClassList","SCHEME","openURL","url","direction","router","test","push"],"mappings":"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","file":"static/js/68.3aa7ff6b.chunk.js","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { r as registerInstance, d as createEvent, w as writeTask, c as getIonMode, h, H as Host, e as getElement } from './core-80bde1aa.js';\nimport './config-3c7f3790.js';\nimport { p as pointerCoord } from './helpers-46f4a262.js';\nimport { c as createColorClasses, h as hostContext } from './theme-18cbe2cc.js';\nvar Segment = /** @class */ (function () {\n    function class_1(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.didInit = false;\n        this.activated = false;\n        /**\n         * If `true`, the user cannot interact with the segment.\n         */\n        this.disabled = false;\n        /**\n         * If `true`, the segment buttons will overflow and the user can swipe to see them.\n         * In addition, this will disable the gesture to drag the indicator between the buttons\n         * in order to swipe to see hidden buttons.\n         */\n        this.scrollable = false;\n        this.onClick = function (ev) {\n            var current = ev.target;\n            var previous = _this.checked;\n            _this.value = current.value;\n            if (previous && _this.scrollable) {\n                _this.checkButton(previous, current);\n            }\n            _this.checked = current;\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    class_1.prototype.valueChanged = function (value) {\n        if (this.didInit) {\n            this.ionChange.emit({ value: value });\n        }\n    };\n    class_1.prototype.disabledChanged = function () {\n        this.gestureChanged();\n        var buttons = this.getButtons();\n        for (var _i = 0, buttons_1 = buttons; _i < buttons_1.length; _i++) {\n            var button = buttons_1[_i];\n            button.disabled = this.disabled;\n        }\n    };\n    class_1.prototype.gestureChanged = function () {\n        if (this.gesture && !this.scrollable) {\n            this.gesture.enable(!this.disabled);\n        }\n    };\n    class_1.prototype.connectedCallback = function () {\n        this.emitStyle();\n    };\n    class_1.prototype.componentWillLoad = function () {\n        this.emitStyle();\n    };\n    class_1.prototype.componentDidLoad = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.setCheckedClasses();\n                        _a = this;\n                        return [4 /*yield*/, import('./index-c38df685.js')];\n                    case 1:\n                        _a.gesture = (_b.sent()).createGesture({\n                            el: this.el,\n                            gestureName: 'segment',\n                            gesturePriority: 100,\n                            threshold: 0,\n                            passive: false,\n                            onStart: function (ev) { return _this.onStart(ev); },\n                            onMove: function (ev) { return _this.onMove(ev); },\n                            onEnd: function (ev) { return _this.onEnd(ev); },\n                        });\n                        this.gesture.enable(!this.scrollable);\n                        this.gestureChanged();\n                        if (this.disabled) {\n                            this.disabledChanged();\n                        }\n                        this.didInit = true;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.onStart = function (detail) {\n        this.activate(detail);\n    };\n    class_1.prototype.onMove = function (detail) {\n        this.setNextIndex(detail);\n    };\n    class_1.prototype.onEnd = function (detail) {\n        this.setActivated(false);\n        var checkedValidButton = this.setNextIndex(detail, true);\n        detail.event.preventDefault();\n        detail.event.stopImmediatePropagation();\n        if (checkedValidButton) {\n            this.addRipple(detail);\n        }\n    };\n    class_1.prototype.getButtons = function () {\n        return Array.from(this.el.querySelectorAll('ion-segment-button'));\n    };\n    /**\n     * The gesture blocks the segment button ripple. This\n     * function adds the ripple based on the checked segment\n     * and where the cursor ended.\n     */\n    class_1.prototype.addRipple = function (detail) {\n        var _this = this;\n        var buttons = this.getButtons();\n        var checked = buttons.find(function (button) { return button.value === _this.value; });\n        var ripple = checked.shadowRoot.querySelector('ion-ripple-effect');\n        if (!ripple) {\n            return;\n        }\n        var _a = pointerCoord(detail.event), x = _a.x, y = _a.y;\n        ripple.addRipple(x, y).then(function (remove) { return remove(); });\n    };\n    /*\n     * Activate both the segment and the buttons\n     * due to a bug with ::slotted in Safari\n     */\n    class_1.prototype.setActivated = function (activated) {\n        var buttons = this.getButtons();\n        buttons.forEach(function (button) {\n            if (activated) {\n                button.classList.add('segment-button-activated');\n            }\n            else {\n                button.classList.remove('segment-button-activated');\n            }\n        });\n        this.activated = activated;\n    };\n    class_1.prototype.activate = function (detail) {\n        var _this = this;\n        var clicked = detail.event.target;\n        var buttons = this.getButtons();\n        var checked = buttons.find(function (button) { return button.value === _this.value; });\n        // Make sure we are only checking for activation on a segment button\n        // since disabled buttons will get the click on the segment\n        if (clicked.tagName !== 'ION-SEGMENT-BUTTON') {\n            return;\n        }\n        // If there are no checked buttons, set the current button to checked\n        if (!checked) {\n            this.value = clicked.value;\n        }\n        // If the gesture began on the clicked button with the indicator\n        // then we should activate the indicator\n        if (this.value === clicked.value) {\n            this.setActivated(true);\n        }\n    };\n    class_1.prototype.getIndicator = function (button) {\n        return button.shadowRoot && button.shadowRoot.querySelector('.segment-button-indicator');\n    };\n    class_1.prototype.checkButton = function (previous, current) {\n        var previousIndicator = this.getIndicator(previous);\n        var currentIndicator = this.getIndicator(current);\n        if (previousIndicator === null || currentIndicator === null) {\n            return;\n        }\n        var previousClientRect = previousIndicator.getBoundingClientRect();\n        var currentClientRect = currentIndicator.getBoundingClientRect();\n        var widthDelta = previousClientRect.width / currentClientRect.width;\n        var xPosition = previousClientRect.left - currentClientRect.left;\n        // Scale the indicator width to match the previous indicator width\n        // and translate it on top of the previous indicator\n        var transform = \"translate3d(\" + xPosition + \"px, 0, 0) scaleX(\" + widthDelta + \")\";\n        writeTask(function () {\n            // Remove the transition before positioning on top of the previous indicator\n            currentIndicator.classList.remove('segment-button-indicator-animated');\n            currentIndicator.style.setProperty('transform', transform);\n            // Force a repaint to ensure the transform happens\n            currentIndicator.getBoundingClientRect();\n            // Add the transition to move the indicator into place\n            currentIndicator.classList.add('segment-button-indicator-animated');\n            // Remove the transform to slide the indicator back to the button clicked\n            currentIndicator.style.setProperty('transform', '');\n        });\n        this.value = current.value;\n        this.setCheckedClasses();\n    };\n    class_1.prototype.setCheckedClasses = function () {\n        var _this = this;\n        var buttons = this.getButtons();\n        var index = buttons.findIndex(function (button) { return button.value === _this.value; });\n        var next = index + 1;\n        // Keep track of the currently checked button\n        this.checked = buttons.find(function (button) { return button.value === _this.value; });\n        for (var _i = 0, buttons_2 = buttons; _i < buttons_2.length; _i++) {\n            var button = buttons_2[_i];\n            button.classList.remove('segment-button-after-checked');\n        }\n        if (next < buttons.length) {\n            buttons[next].classList.add('segment-button-after-checked');\n        }\n    };\n    class_1.prototype.setNextIndex = function (detail, isEnd) {\n        var _this = this;\n        if (isEnd === void 0) { isEnd = false; }\n        var isRTL = document.dir === 'rtl';\n        var activated = this.activated;\n        var buttons = this.getButtons();\n        var index = buttons.findIndex(function (button) { return button.value === _this.value; });\n        var previous = buttons[index];\n        var current;\n        var nextIndex;\n        if (index === -1) {\n            return;\n        }\n        // Get the element that the touch event started on in case\n        // it was the checked button, then we will move the indicator\n        var rect = previous.getBoundingClientRect();\n        var left = rect.left;\n        var width = rect.width;\n        // Get the element that the gesture is on top of based on the currentX of the\n        // gesture event and the Y coordinate of the starting element, since the gesture\n        // can move up and down off of the segment\n        var currentX = detail.currentX;\n        var previousY = rect.y;\n        var nextEl = document.elementFromPoint(currentX, previousY);\n        var decreaseIndex = isRTL ? currentX > (left + width) : currentX < left;\n        var increaseIndex = isRTL ? currentX < left : currentX > (left + width);\n        // If the indicator is currently activated then we have started the gesture\n        // on top of the checked button so we need to slide the indicator\n        // by checking the button next to it as we move\n        if (activated && !isEnd) {\n            // Decrease index, move left in LTR & right in RTL\n            if (decreaseIndex) {\n                var newIndex = index - 1;\n                if (newIndex >= 0) {\n                    nextIndex = newIndex;\n                }\n                // Increase index, moves right in LTR & left in RTL\n            }\n            else if (increaseIndex) {\n                if (activated && !isEnd) {\n                    var newIndex = index + 1;\n                    if (newIndex < buttons.length) {\n                        nextIndex = newIndex;\n                    }\n                }\n            }\n            if (nextIndex !== undefined && !buttons[nextIndex].disabled) {\n                current = buttons[nextIndex];\n            }\n        }\n        // If the indicator is not activated then we will just set the indicator\n        // to the element where the gesture ended\n        if (!activated && isEnd) {\n            current = nextEl;\n        }\n        /* tslint:disable-next-line */\n        if (current != null) {\n            /**\n             * If current element is ion-segment then that means\n             * user tried to select a disabled ion-segment-button,\n             * and we should not update the ripple.\n             */\n            if (current.tagName === 'ION-SEGMENT') {\n                return false;\n            }\n            if (previous !== current) {\n                this.checkButton(previous, current);\n            }\n        }\n        return true;\n    };\n    class_1.prototype.emitStyle = function () {\n        this.ionStyle.emit({\n            'segment': true\n        });\n    };\n    class_1.prototype.render = function () {\n        var _a;\n        var mode = getIonMode(this);\n        return (h(Host, { onClick: this.onClick, class: Object.assign(Object.assign({}, createColorClasses(this.color)), (_a = {}, _a[mode] = true, _a['in-toolbar'] = hostContext('ion-toolbar', this.el), _a['in-toolbar-color'] = hostContext('ion-toolbar[color]', this.el), _a['segment-activated'] = this.activated, _a['segment-disabled'] = this.disabled, _a['segment-scrollable'] = this.scrollable, _a)) }, h(\"slot\", null)));\n    };\n    Object.defineProperty(class_1.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"watchers\", {\n        get: function () {\n            return {\n                \"value\": [\"valueChanged\"],\n                \"disabled\": [\"disabledChanged\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"style\", {\n        get: function () { return \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family,inherit);text-align:center;contain:paint}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:scroll}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:rgba(var(--ion-text-color-rgb,0,0,0),0.065);border-radius:8px;overflow:hidden;z-index:0}:host(.ion-color){background:rgba(var(--ion-color-base-rgb),.065)}:host(.in-toolbar){margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:auto}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-toolbar){margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.in-toolbar:not(.ion-color)){background:var(--ion-toolbar-segment-background,var(--background))}:host(.in-toolbar-color:not(.ion-color)){background:rgba(var(--ion-color-contrast-rgb),.11)}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return class_1;\n}());\nvar ids = 0;\nvar SegmentButton = /** @class */ (function () {\n    function SegmentButton(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.segmentEl = null;\n        this.checked = false;\n        /**\n         * If `true`, the user cannot interact with the segment button.\n         */\n        this.disabled = false;\n        /**\n         * Set the layout of the text and icon in the segment.\n         */\n        this.layout = 'icon-top';\n        /**\n         * The type of the button.\n         */\n        this.type = 'button';\n        /**\n         * The value of the segment button.\n         */\n        this.value = 'ion-sb-' + (ids++);\n        this.updateState = function () {\n            if (_this.segmentEl) {\n                _this.checked = _this.segmentEl.value === _this.value;\n            }\n        };\n    }\n    SegmentButton.prototype.connectedCallback = function () {\n        var segmentEl = this.segmentEl = this.el.closest('ion-segment');\n        if (segmentEl) {\n            this.updateState();\n            segmentEl.addEventListener('ionChange', this.updateState);\n        }\n    };\n    SegmentButton.prototype.disconnectedCallback = function () {\n        var segmentEl = this.segmentEl;\n        if (segmentEl) {\n            segmentEl.removeEventListener('ionChange', this.updateState);\n            this.segmentEl = null;\n        }\n    };\n    Object.defineProperty(SegmentButton.prototype, \"hasLabel\", {\n        get: function () {\n            return !!this.el.querySelector('ion-label');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SegmentButton.prototype, \"hasIcon\", {\n        get: function () {\n            return !!this.el.querySelector('ion-icon');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SegmentButton.prototype.render = function () {\n        var _a;\n        var _b = this, checked = _b.checked, type = _b.type, disabled = _b.disabled, hasIcon = _b.hasIcon, hasLabel = _b.hasLabel, layout = _b.layout;\n        var mode = getIonMode(this);\n        return (h(Host, { \"aria-disabled\": disabled ? 'true' : null, class: (_a = {},\n                _a[mode] = true,\n                _a['in-toolbar'] = hostContext('ion-toolbar', this.el),\n                _a['in-toolbar-color'] = hostContext('ion-toolbar[color]', this.el),\n                _a['in-segment'] = hostContext('ion-segment', this.el),\n                _a['in-segment-color'] = hostContext('ion-segment[color]', this.el),\n                _a['segment-button-has-label'] = hasLabel,\n                _a['segment-button-has-icon'] = hasIcon,\n                _a['segment-button-has-label-only'] = hasLabel && !hasIcon,\n                _a['segment-button-has-icon-only'] = hasIcon && !hasLabel,\n                _a['segment-button-disabled'] = disabled,\n                _a['segment-button-checked'] = checked,\n                _a[\"segment-button-layout-\" + layout] = true,\n                _a['ion-activatable'] = true,\n                _a['ion-activatable-instant'] = true,\n                _a['ion-focusable'] = true,\n                _a) }, h(\"button\", { type: type, \"aria-pressed\": checked ? 'true' : null, class: \"button-native\", disabled: disabled }, h(\"span\", { class: \"button-inner\" }, h(\"slot\", null)), mode === 'md' && h(\"ion-ripple-effect\", null)), h(\"div\", { part: \"indicator\", class: {\n                'segment-button-indicator': true,\n                'segment-button-indicator-animated': true\n            } }, h(\"div\", { part: \"indicator-background\", class: \"segment-button-indicator-background\" }))));\n    };\n    Object.defineProperty(SegmentButton.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SegmentButton, \"style\", {\n        get: function () { return \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;border-radius:var(--border-radius);-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native,:host{display:-ms-flexbox;display:flex;height:auto}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translateZ(0);transform:translateZ(0);position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;cursor:pointer;overflow:hidden;z-index:2}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end);padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native:after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native:after{background:var(--background-focused);opacity:var(--background-focused-opacity)}\\@media (any-hover:hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native:after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon),:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color,var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform,opacity}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow)}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}\\@media (prefers-reduced-motion:reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:none;--background-hover-opacity:0;--background-focused:none;--background-focused-opacity:0;--border-radius:7px;--border-width:1px;--border-color:rgba(var(--ion-text-color-rgb,0,0,0),0.12);--border-style:solid;--indicator-box-shadow:0 0 5px rgba(0,0,0,0.16);--indicator-color:var(--ion-color-step-350,var(--ion-background-color,#fff));--indicator-height:100%;--indicator-transition:transform 260ms cubic-bezier(0.4,0,0.2,1);--indicator-transform:none;--transition:100ms all linear;--padding-top:0;--padding-end:13px;--padding-bottom:0;--padding-start:13px;margin-top:2px;margin-bottom:2px;position:relative;-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-direction:row;flex-direction:row;min-width:70px;min-height:28px;-webkit-transform:translateZ(0);transform:translateZ(0);font-size:13px;font-weight:450;line-height:37px}:host:before{margin-left:0;margin-right:0;margin-top:5px;margin-bottom:5px;-webkit-transition:opacity .16s ease-in-out;transition:opacity .16s ease-in-out;-webkit-transition-delay:.1s;transition-delay:.1s;border-left:var(--border-width) var(--border-style) var(--border-color);content:\\\"\\\";opacity:1;will-change:opacity}:host(:first-of-type):before{border-left-color:transparent}:host(.segment-button-disabled){opacity:.3}::slotted(ion-icon){font-size:24px}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:2px;margin-right:0}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:2px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:2px;margin-inline-end:2px}}.segment-button-indicator{padding-left:2px;padding-right:2px;left:0;right:0;top:0;bottom:0}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.segment-button-indicator{padding-left:unset;padding-right:unset;-webkit-padding-start:2px;padding-inline-start:2px;-webkit-padding-end:2px;padding-inline-end:2px}}.segment-button-indicator-background{border-radius:7px;background:var(--indicator-color);-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-after-checked):before,:host(.segment-button-checked):before{opacity:0}:host(.segment-button-checked){z-index:-1}:host(.segment-button-activated){--indicator-transform:scale(0.95)}:host(.ion-focused) .button-native{opacity:.7}\\@media (any-hover:hover){:host(:hover) .button-native{opacity:.5}:host(.segment-button-checked:hover) .button-native{opacity:1}}:host(.in-segment-color){background:none;color:var(--ion-text-color,#000)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-step-350,var(--ion-background-color,#fff))}\\@media (any-hover:hover){:host(.in-segment-color.segment-button-checked:hover) .button-native,:host(.in-segment-color:hover) .button-native{color:var(--ion-text-color,#000)}}:host(.in-toolbar:not(.in-segment-color)){--background-checked:var(--ion-toolbar-segment-background-checked,none);--color:var(--ion-toolbar-segment-color,var(--ion-toolbar-color),initial);--color-checked:var(--ion-toolbar-segment-color-checked,var(--ion-toolbar-color),initial);--indicator-color:var(--ion-toolbar-segment-indicator-color,var(--ion-color-step-350,var(--ion-background-color,#fff)))}:host(.in-toolbar-color) .segment-button-indicator-background{background:#fff}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-base)}\\@media (any-hover:hover){:host(.in-toolbar-color:not(.in-segment-color):hover) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color):hover) .button-native{color:var(--ion-color-base)}}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return SegmentButton;\n}());\nexport { Segment as ion_segment, SegmentButton as ion_segment_button };\n","import { __awaiter, __generator } from \"tslib\";\nvar hostContext = function (selector, el) {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nvar createColorClasses = function (color) {\n    var _a;\n    return (typeof color === 'string' && color.length > 0) ? (_a = {\n            'ion-color': true\n        },\n        _a[\"ion-color-\" + color] = true,\n        _a) : undefined;\n};\nvar getClassList = function (classes) {\n    if (classes !== undefined) {\n        var array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(function (c) { return c != null; })\n            .map(function (c) { return c.trim(); })\n            .filter(function (c) { return c !== ''; });\n    }\n    return [];\n};\nvar getClassMap = function (classes) {\n    var map = {};\n    getClassList(classes).forEach(function (c) { return map[c] = true; });\n    return map;\n};\nvar SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nvar openURL = function (url, ev, direction) { return __awaiter(void 0, void 0, void 0, function () {\n    var router;\n    return __generator(this, function (_a) {\n        if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n            router = document.querySelector('ion-router');\n            if (router) {\n                if (ev != null) {\n                    ev.preventDefault();\n                }\n                return [2 /*return*/, router.push(url, direction)];\n            }\n        }\n        return [2 /*return*/, false];\n    });\n}); };\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"sourceRoot":""}